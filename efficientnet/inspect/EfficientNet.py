# GENETARED BY NNDCT, DO NOT EDIT!

import torch
from torch import tensor
import pytorch_nndct as py_nndct

class EfficientNet(py_nndct.nn.NndctQuantModel):
    def __init__(self):
        super(EfficientNet, self).__init__()
        self.module_0 = py_nndct.nn.Input() #EfficientNet::input_0(EfficientNet::nndct_input_0)
        self.module_1 = py_nndct.nn.Conv2d(in_channels=3, out_channels=24, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Conv2dNormActivation[0]/Conv2d[0]/ret.3(EfficientNet::nndct_conv2d_1)
        self.module_2 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Conv2dNormActivation[0]/Hardswish[2]/50733(EfficientNet::nndct_hswish_2)
        self.module_3 = py_nndct.nn.Conv2d(in_channels=24, out_channels=24, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[1]/FusedMBConv[0]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.7(EfficientNet::nndct_conv2d_3)
        self.module_4 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[1]/FusedMBConv[0]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/50761(EfficientNet::nndct_hswish_4)
        self.module_5 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[1]/FusedMBConv[0]/50764(EfficientNet::nndct_elemwise_add_5)
        self.module_6 = py_nndct.nn.Conv2d(in_channels=24, out_channels=24, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[1]/FusedMBConv[1]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.11(EfficientNet::nndct_conv2d_6)
        self.module_7 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[1]/FusedMBConv[1]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/50792(EfficientNet::nndct_hswish_7)
        self.module_8 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[1]/FusedMBConv[1]/50795(EfficientNet::nndct_elemwise_add_8)
        self.module_9 = py_nndct.nn.Conv2d(in_channels=24, out_channels=77, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[0]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.15(EfficientNet::nndct_conv2d_9)
        self.module_10 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[0]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/50823(EfficientNet::nndct_hswish_10)
        self.module_11 = py_nndct.nn.Conv2d(in_channels=77, out_channels=48, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[0]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.19(EfficientNet::nndct_conv2d_11)
        self.module_12 = py_nndct.nn.Conv2d(in_channels=48, out_channels=84, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[1]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.23(EfficientNet::nndct_conv2d_12)
        self.module_13 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[1]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/50878(EfficientNet::nndct_hswish_13)
        self.module_14 = py_nndct.nn.Conv2d(in_channels=84, out_channels=48, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[1]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.27(EfficientNet::nndct_conv2d_14)
        self.module_15 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[1]/50908(EfficientNet::nndct_elemwise_add_15)
        self.module_16 = py_nndct.nn.Conv2d(in_channels=48, out_channels=127, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[2]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.31(EfficientNet::nndct_conv2d_16)
        self.module_17 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[2]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/50936(EfficientNet::nndct_hswish_17)
        self.module_18 = py_nndct.nn.Conv2d(in_channels=127, out_channels=48, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[2]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.35(EfficientNet::nndct_conv2d_18)
        self.module_19 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[2]/50966(EfficientNet::nndct_elemwise_add_19)
        self.module_20 = py_nndct.nn.Conv2d(in_channels=48, out_channels=134, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[3]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.39(EfficientNet::nndct_conv2d_20)
        self.module_21 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[3]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/50994(EfficientNet::nndct_hswish_21)
        self.module_22 = py_nndct.nn.Conv2d(in_channels=134, out_channels=48, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[3]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.43(EfficientNet::nndct_conv2d_22)
        self.module_23 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[2]/FusedMBConv[3]/51024(EfficientNet::nndct_elemwise_add_23)
        self.module_24 = py_nndct.nn.Conv2d(in_channels=48, out_channels=145, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[0]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.47(EfficientNet::nndct_conv2d_24)
        self.module_25 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[0]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/51052(EfficientNet::nndct_hswish_25)
        self.module_26 = py_nndct.nn.Conv2d(in_channels=145, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[0]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.51(EfficientNet::nndct_conv2d_26)
        self.module_27 = py_nndct.nn.Conv2d(in_channels=64, out_channels=132, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[1]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.55(EfficientNet::nndct_conv2d_27)
        self.module_28 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[1]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/51107(EfficientNet::nndct_hswish_28)
        self.module_29 = py_nndct.nn.Conv2d(in_channels=132, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[1]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.59(EfficientNet::nndct_conv2d_29)
        self.module_30 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[1]/51137(EfficientNet::nndct_elemwise_add_30)
        self.module_31 = py_nndct.nn.Conv2d(in_channels=64, out_channels=139, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[2]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.63(EfficientNet::nndct_conv2d_31)
        self.module_32 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[2]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/51165(EfficientNet::nndct_hswish_32)
        self.module_33 = py_nndct.nn.Conv2d(in_channels=139, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[2]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.67(EfficientNet::nndct_conv2d_33)
        self.module_34 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[2]/51195(EfficientNet::nndct_elemwise_add_34)
        self.module_35 = py_nndct.nn.Conv2d(in_channels=64, out_channels=134, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[3]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.71(EfficientNet::nndct_conv2d_35)
        self.module_36 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[3]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/51223(EfficientNet::nndct_hswish_36)
        self.module_37 = py_nndct.nn.Conv2d(in_channels=134, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[3]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.75(EfficientNet::nndct_conv2d_37)
        self.module_38 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[3]/FusedMBConv[3]/51253(EfficientNet::nndct_elemwise_add_38)
        self.module_39 = py_nndct.nn.Conv2d(in_channels=64, out_channels=109, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[0]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.79(EfficientNet::nndct_conv2d_39)
        self.module_40 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[0]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/51281(EfficientNet::nndct_hswish_40)
        self.module_41 = py_nndct.nn.Conv2d(in_channels=109, out_channels=109, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=109, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[0]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.83(EfficientNet::nndct_depthwise_conv2d_41)
        self.module_42 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[0]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/51309(EfficientNet::nndct_hswish_42)
        self.module_43 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/51358(EfficientNet::nndct_adaptive_avg_pool2d_43)
        self.module_44 = py_nndct.nn.Conv2d(in_channels=109, out_channels=16, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.87(EfficientNet::nndct_conv2d_44)
        self.module_45 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/51380(EfficientNet::nndct_hswish_45)
        self.module_46 = py_nndct.nn.Conv2d(in_channels=16, out_channels=109, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.89(EfficientNet::nndct_conv2d_46)
        self.module_47 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.91(EfficientNet::nndct_hsigmoid_47)
        self.module_48 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/ret.93(EfficientNet::nndct_elemwise_mul_48)
        self.module_49 = py_nndct.nn.Conv2d(in_channels=109, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[0]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.95(EfficientNet::nndct_conv2d_49)
        self.module_50 = py_nndct.nn.Conv2d(in_channels=128, out_channels=82, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[1]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.99(EfficientNet::nndct_conv2d_50)
        self.module_51 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[1]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/51459(EfficientNet::nndct_hswish_51)
        self.module_52 = py_nndct.nn.Conv2d(in_channels=82, out_channels=82, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=82, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[1]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.103(EfficientNet::nndct_depthwise_conv2d_52)
        self.module_53 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[1]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/51487(EfficientNet::nndct_hswish_53)
        self.module_54 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/51536(EfficientNet::nndct_adaptive_avg_pool2d_54)
        self.module_55 = py_nndct.nn.Conv2d(in_channels=82, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.107(EfficientNet::nndct_conv2d_55)
        self.module_56 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/51558(EfficientNet::nndct_hswish_56)
        self.module_57 = py_nndct.nn.Conv2d(in_channels=32, out_channels=82, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.109(EfficientNet::nndct_conv2d_57)
        self.module_58 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.111(EfficientNet::nndct_hsigmoid_58)
        self.module_59 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/ret.113(EfficientNet::nndct_elemwise_mul_59)
        self.module_60 = py_nndct.nn.Conv2d(in_channels=82, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[1]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.115(EfficientNet::nndct_conv2d_60)
        self.module_61 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[1]/51612(EfficientNet::nndct_elemwise_add_61)
        self.module_62 = py_nndct.nn.Conv2d(in_channels=128, out_channels=78, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[2]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.119(EfficientNet::nndct_conv2d_62)
        self.module_63 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[2]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/51640(EfficientNet::nndct_hswish_63)
        self.module_64 = py_nndct.nn.Conv2d(in_channels=78, out_channels=78, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=78, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[2]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.123(EfficientNet::nndct_depthwise_conv2d_64)
        self.module_65 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[2]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/51668(EfficientNet::nndct_hswish_65)
        self.module_66 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/51717(EfficientNet::nndct_adaptive_avg_pool2d_66)
        self.module_67 = py_nndct.nn.Conv2d(in_channels=78, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.127(EfficientNet::nndct_conv2d_67)
        self.module_68 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/51739(EfficientNet::nndct_hswish_68)
        self.module_69 = py_nndct.nn.Conv2d(in_channels=32, out_channels=78, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.129(EfficientNet::nndct_conv2d_69)
        self.module_70 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.131(EfficientNet::nndct_hsigmoid_70)
        self.module_71 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/ret.133(EfficientNet::nndct_elemwise_mul_71)
        self.module_72 = py_nndct.nn.Conv2d(in_channels=78, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[2]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.135(EfficientNet::nndct_conv2d_72)
        self.module_73 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[2]/51793(EfficientNet::nndct_elemwise_add_73)
        self.module_74 = py_nndct.nn.Conv2d(in_channels=128, out_channels=88, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[3]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.139(EfficientNet::nndct_conv2d_74)
        self.module_75 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[3]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/51821(EfficientNet::nndct_hswish_75)
        self.module_76 = py_nndct.nn.Conv2d(in_channels=88, out_channels=88, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=88, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[3]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.143(EfficientNet::nndct_depthwise_conv2d_76)
        self.module_77 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[3]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/51849(EfficientNet::nndct_hswish_77)
        self.module_78 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/51898(EfficientNet::nndct_adaptive_avg_pool2d_78)
        self.module_79 = py_nndct.nn.Conv2d(in_channels=88, out_channels=14, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.147(EfficientNet::nndct_conv2d_79)
        self.module_80 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/51920(EfficientNet::nndct_hswish_80)
        self.module_81 = py_nndct.nn.Conv2d(in_channels=14, out_channels=88, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.149(EfficientNet::nndct_conv2d_81)
        self.module_82 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.151(EfficientNet::nndct_hsigmoid_82)
        self.module_83 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/ret.153(EfficientNet::nndct_elemwise_mul_83)
        self.module_84 = py_nndct.nn.Conv2d(in_channels=88, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[3]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.155(EfficientNet::nndct_conv2d_84)
        self.module_85 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[3]/51974(EfficientNet::nndct_elemwise_add_85)
        self.module_86 = py_nndct.nn.Conv2d(in_channels=128, out_channels=78, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[4]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.159(EfficientNet::nndct_conv2d_86)
        self.module_87 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[4]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/52002(EfficientNet::nndct_hswish_87)
        self.module_88 = py_nndct.nn.Conv2d(in_channels=78, out_channels=78, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=78, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[4]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.163(EfficientNet::nndct_depthwise_conv2d_88)
        self.module_89 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[4]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/52030(EfficientNet::nndct_hswish_89)
        self.module_90 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/52079(EfficientNet::nndct_adaptive_avg_pool2d_90)
        self.module_91 = py_nndct.nn.Conv2d(in_channels=78, out_channels=9, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.167(EfficientNet::nndct_conv2d_91)
        self.module_92 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/52101(EfficientNet::nndct_hswish_92)
        self.module_93 = py_nndct.nn.Conv2d(in_channels=9, out_channels=78, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.169(EfficientNet::nndct_conv2d_93)
        self.module_94 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.171(EfficientNet::nndct_hsigmoid_94)
        self.module_95 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/ret.173(EfficientNet::nndct_elemwise_mul_95)
        self.module_96 = py_nndct.nn.Conv2d(in_channels=78, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[4]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.175(EfficientNet::nndct_conv2d_96)
        self.module_97 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[4]/52155(EfficientNet::nndct_elemwise_add_97)
        self.module_98 = py_nndct.nn.Conv2d(in_channels=128, out_channels=88, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[5]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.179(EfficientNet::nndct_conv2d_98)
        self.module_99 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[5]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/52183(EfficientNet::nndct_hswish_99)
        self.module_100 = py_nndct.nn.Conv2d(in_channels=88, out_channels=88, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=88, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[5]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.183(EfficientNet::nndct_depthwise_conv2d_100)
        self.module_101 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[5]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/52211(EfficientNet::nndct_hswish_101)
        self.module_102 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/52260(EfficientNet::nndct_adaptive_avg_pool2d_102)
        self.module_103 = py_nndct.nn.Conv2d(in_channels=88, out_channels=2, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.187(EfficientNet::nndct_conv2d_103)
        self.module_104 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/52282(EfficientNet::nndct_hswish_104)
        self.module_105 = py_nndct.nn.Conv2d(in_channels=2, out_channels=88, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.189(EfficientNet::nndct_conv2d_105)
        self.module_106 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.191(EfficientNet::nndct_hsigmoid_106)
        self.module_107 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/ret.193(EfficientNet::nndct_elemwise_mul_107)
        self.module_108 = py_nndct.nn.Conv2d(in_channels=88, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[5]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.195(EfficientNet::nndct_conv2d_108)
        self.module_109 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[4]/MBConv[5]/52336(EfficientNet::nndct_elemwise_add_109)
        self.module_110 = py_nndct.nn.Conv2d(in_channels=128, out_channels=98, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[0]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.199(EfficientNet::nndct_conv2d_110)
        self.module_111 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[0]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/52364(EfficientNet::nndct_hswish_111)
        self.module_112 = py_nndct.nn.Conv2d(in_channels=98, out_channels=98, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=98, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[0]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.203(EfficientNet::nndct_depthwise_conv2d_112)
        self.module_113 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[0]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/52392(EfficientNet::nndct_hswish_113)
        self.module_114 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/52441(EfficientNet::nndct_adaptive_avg_pool2d_114)
        self.module_115 = py_nndct.nn.Conv2d(in_channels=98, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.207(EfficientNet::nndct_conv2d_115)
        self.module_116 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/52463(EfficientNet::nndct_hswish_116)
        self.module_117 = py_nndct.nn.Conv2d(in_channels=32, out_channels=98, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.209(EfficientNet::nndct_conv2d_117)
        self.module_118 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.211(EfficientNet::nndct_hsigmoid_118)
        self.module_119 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/ret.213(EfficientNet::nndct_elemwise_mul_119)
        self.module_120 = py_nndct.nn.Conv2d(in_channels=98, out_channels=113, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[0]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.215(EfficientNet::nndct_conv2d_120)
        self.module_121 = py_nndct.nn.Conv2d(in_channels=113, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[1]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.219(EfficientNet::nndct_conv2d_121)
        self.module_122 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[1]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/52542(EfficientNet::nndct_hswish_122)
        self.module_123 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=64, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[1]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.223(EfficientNet::nndct_depthwise_conv2d_123)
        self.module_124 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[1]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/52570(EfficientNet::nndct_hswish_124)
        self.module_125 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/52619(EfficientNet::nndct_adaptive_avg_pool2d_125)
        self.module_126 = py_nndct.nn.Conv2d(in_channels=64, out_channels=40, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.227(EfficientNet::nndct_conv2d_126)
        self.module_127 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/52641(EfficientNet::nndct_hswish_127)
        self.module_128 = py_nndct.nn.Conv2d(in_channels=40, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.229(EfficientNet::nndct_conv2d_128)
        self.module_129 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.231(EfficientNet::nndct_hsigmoid_129)
        self.module_130 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/ret.233(EfficientNet::nndct_elemwise_mul_130)
        self.module_131 = py_nndct.nn.Conv2d(in_channels=64, out_channels=113, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[1]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.235(EfficientNet::nndct_conv2d_131)
        self.module_132 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[1]/52695(EfficientNet::nndct_elemwise_add_132)
        self.module_133 = py_nndct.nn.Conv2d(in_channels=113, out_channels=66, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[2]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.239(EfficientNet::nndct_conv2d_133)
        self.module_134 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[2]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/52723(EfficientNet::nndct_hswish_134)
        self.module_135 = py_nndct.nn.Conv2d(in_channels=66, out_channels=66, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=66, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[2]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.243(EfficientNet::nndct_depthwise_conv2d_135)
        self.module_136 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[2]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/52751(EfficientNet::nndct_hswish_136)
        self.module_137 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/52800(EfficientNet::nndct_adaptive_avg_pool2d_137)
        self.module_138 = py_nndct.nn.Conv2d(in_channels=66, out_channels=26, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.247(EfficientNet::nndct_conv2d_138)
        self.module_139 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/52822(EfficientNet::nndct_hswish_139)
        self.module_140 = py_nndct.nn.Conv2d(in_channels=26, out_channels=66, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.249(EfficientNet::nndct_conv2d_140)
        self.module_141 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.251(EfficientNet::nndct_hsigmoid_141)
        self.module_142 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/ret.253(EfficientNet::nndct_elemwise_mul_142)
        self.module_143 = py_nndct.nn.Conv2d(in_channels=66, out_channels=113, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[2]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.255(EfficientNet::nndct_conv2d_143)
        self.module_144 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[2]/52876(EfficientNet::nndct_elemwise_add_144)
        self.module_145 = py_nndct.nn.Conv2d(in_channels=113, out_channels=60, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[3]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.259(EfficientNet::nndct_conv2d_145)
        self.module_146 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[3]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/52904(EfficientNet::nndct_hswish_146)
        self.module_147 = py_nndct.nn.Conv2d(in_channels=60, out_channels=60, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=60, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[3]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.263(EfficientNet::nndct_depthwise_conv2d_147)
        self.module_148 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[3]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/52932(EfficientNet::nndct_hswish_148)
        self.module_149 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/52981(EfficientNet::nndct_adaptive_avg_pool2d_149)
        self.module_150 = py_nndct.nn.Conv2d(in_channels=60, out_channels=15, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.267(EfficientNet::nndct_conv2d_150)
        self.module_151 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/53003(EfficientNet::nndct_hswish_151)
        self.module_152 = py_nndct.nn.Conv2d(in_channels=15, out_channels=60, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.269(EfficientNet::nndct_conv2d_152)
        self.module_153 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.271(EfficientNet::nndct_hsigmoid_153)
        self.module_154 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/ret.273(EfficientNet::nndct_elemwise_mul_154)
        self.module_155 = py_nndct.nn.Conv2d(in_channels=60, out_channels=113, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[3]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.275(EfficientNet::nndct_conv2d_155)
        self.module_156 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[3]/53057(EfficientNet::nndct_elemwise_add_156)
        self.module_157 = py_nndct.nn.Conv2d(in_channels=113, out_channels=68, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[4]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.279(EfficientNet::nndct_conv2d_157)
        self.module_158 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[4]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/53085(EfficientNet::nndct_hswish_158)
        self.module_159 = py_nndct.nn.Conv2d(in_channels=68, out_channels=68, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=68, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[4]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.283(EfficientNet::nndct_depthwise_conv2d_159)
        self.module_160 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[4]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/53113(EfficientNet::nndct_hswish_160)
        self.module_161 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/53162(EfficientNet::nndct_adaptive_avg_pool2d_161)
        self.module_162 = py_nndct.nn.Conv2d(in_channels=68, out_channels=6, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.287(EfficientNet::nndct_conv2d_162)
        self.module_163 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/53184(EfficientNet::nndct_hswish_163)
        self.module_164 = py_nndct.nn.Conv2d(in_channels=6, out_channels=68, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.289(EfficientNet::nndct_conv2d_164)
        self.module_165 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.291(EfficientNet::nndct_hsigmoid_165)
        self.module_166 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/ret.293(EfficientNet::nndct_elemwise_mul_166)
        self.module_167 = py_nndct.nn.Conv2d(in_channels=68, out_channels=113, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[4]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.295(EfficientNet::nndct_conv2d_167)
        self.module_168 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[4]/53238(EfficientNet::nndct_elemwise_add_168)
        self.module_169 = py_nndct.nn.Conv2d(in_channels=113, out_channels=88, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[5]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.299(EfficientNet::nndct_conv2d_169)
        self.module_170 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[5]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/53266(EfficientNet::nndct_hswish_170)
        self.module_171 = py_nndct.nn.Conv2d(in_channels=88, out_channels=88, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=88, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[5]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.303(EfficientNet::nndct_depthwise_conv2d_171)
        self.module_172 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[5]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/53294(EfficientNet::nndct_hswish_172)
        self.module_173 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/53343(EfficientNet::nndct_adaptive_avg_pool2d_173)
        self.module_174 = py_nndct.nn.Conv2d(in_channels=88, out_channels=1, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.307(EfficientNet::nndct_conv2d_174)
        self.module_175 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/53365(EfficientNet::nndct_hswish_175)
        self.module_176 = py_nndct.nn.Conv2d(in_channels=1, out_channels=88, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.309(EfficientNet::nndct_conv2d_176)
        self.module_177 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.311(EfficientNet::nndct_hsigmoid_177)
        self.module_178 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/ret.313(EfficientNet::nndct_elemwise_mul_178)
        self.module_179 = py_nndct.nn.Conv2d(in_channels=88, out_channels=113, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[5]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.315(EfficientNet::nndct_conv2d_179)
        self.module_180 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[5]/53419(EfficientNet::nndct_elemwise_add_180)
        self.module_181 = py_nndct.nn.Conv2d(in_channels=113, out_channels=78, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[6]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.319(EfficientNet::nndct_conv2d_181)
        self.module_182 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[6]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/53447(EfficientNet::nndct_hswish_182)
        self.module_183 = py_nndct.nn.Conv2d(in_channels=78, out_channels=78, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=78, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[6]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.323(EfficientNet::nndct_depthwise_conv2d_183)
        self.module_184 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[6]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/53475(EfficientNet::nndct_hswish_184)
        self.module_185 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[6]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/53524(EfficientNet::nndct_adaptive_avg_pool2d_185)
        self.module_186 = py_nndct.nn.Conv2d(in_channels=78, out_channels=12, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[6]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.327(EfficientNet::nndct_conv2d_186)
        self.module_187 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[6]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/53546(EfficientNet::nndct_hswish_187)
        self.module_188 = py_nndct.nn.Conv2d(in_channels=12, out_channels=78, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[6]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.329(EfficientNet::nndct_conv2d_188)
        self.module_189 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[6]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.331(EfficientNet::nndct_hsigmoid_189)
        self.module_190 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[6]/Sequential[block]/SqueezeExcitation[2]/ret.333(EfficientNet::nndct_elemwise_mul_190)
        self.module_191 = py_nndct.nn.Conv2d(in_channels=78, out_channels=113, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[6]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.335(EfficientNet::nndct_conv2d_191)
        self.module_192 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[6]/53600(EfficientNet::nndct_elemwise_add_192)
        self.module_193 = py_nndct.nn.Conv2d(in_channels=113, out_channels=94, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[7]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.339(EfficientNet::nndct_conv2d_193)
        self.module_194 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[7]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/53628(EfficientNet::nndct_hswish_194)
        self.module_195 = py_nndct.nn.Conv2d(in_channels=94, out_channels=94, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=94, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[7]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.343(EfficientNet::nndct_depthwise_conv2d_195)
        self.module_196 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[7]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/53656(EfficientNet::nndct_hswish_196)
        self.module_197 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[7]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/53705(EfficientNet::nndct_adaptive_avg_pool2d_197)
        self.module_198 = py_nndct.nn.Conv2d(in_channels=94, out_channels=5, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[7]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.347(EfficientNet::nndct_conv2d_198)
        self.module_199 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[7]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/53727(EfficientNet::nndct_hswish_199)
        self.module_200 = py_nndct.nn.Conv2d(in_channels=5, out_channels=94, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[7]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.349(EfficientNet::nndct_conv2d_200)
        self.module_201 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[7]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.351(EfficientNet::nndct_hsigmoid_201)
        self.module_202 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[7]/Sequential[block]/SqueezeExcitation[2]/ret.353(EfficientNet::nndct_elemwise_mul_202)
        self.module_203 = py_nndct.nn.Conv2d(in_channels=94, out_channels=113, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[7]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.355(EfficientNet::nndct_conv2d_203)
        self.module_204 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[7]/53781(EfficientNet::nndct_elemwise_add_204)
        self.module_205 = py_nndct.nn.Conv2d(in_channels=113, out_channels=65, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[8]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.359(EfficientNet::nndct_conv2d_205)
        self.module_206 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[8]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/53809(EfficientNet::nndct_hswish_206)
        self.module_207 = py_nndct.nn.Conv2d(in_channels=65, out_channels=65, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=65, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[8]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.363(EfficientNet::nndct_depthwise_conv2d_207)
        self.module_208 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[8]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/53837(EfficientNet::nndct_hswish_208)
        self.module_209 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[8]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/53886(EfficientNet::nndct_adaptive_avg_pool2d_209)
        self.module_210 = py_nndct.nn.Conv2d(in_channels=65, out_channels=2, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[8]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.367(EfficientNet::nndct_conv2d_210)
        self.module_211 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[8]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/53908(EfficientNet::nndct_hswish_211)
        self.module_212 = py_nndct.nn.Conv2d(in_channels=2, out_channels=65, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[8]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.369(EfficientNet::nndct_conv2d_212)
        self.module_213 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[8]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.371(EfficientNet::nndct_hsigmoid_213)
        self.module_214 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[8]/Sequential[block]/SqueezeExcitation[2]/ret.373(EfficientNet::nndct_elemwise_mul_214)
        self.module_215 = py_nndct.nn.Conv2d(in_channels=65, out_channels=113, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[8]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.375(EfficientNet::nndct_conv2d_215)
        self.module_216 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[5]/MBConv[8]/53962(EfficientNet::nndct_elemwise_add_216)
        self.module_217 = py_nndct.nn.Conv2d(in_channels=113, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[0]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.379(EfficientNet::nndct_conv2d_217)
        self.module_218 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[0]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/53990(EfficientNet::nndct_hswish_218)
        self.module_219 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=128, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[0]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.383(EfficientNet::nndct_depthwise_conv2d_219)
        self.module_220 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[0]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/54018(EfficientNet::nndct_hswish_220)
        self.module_221 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/54067(EfficientNet::nndct_adaptive_avg_pool2d_221)
        self.module_222 = py_nndct.nn.Conv2d(in_channels=128, out_channels=40, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.387(EfficientNet::nndct_conv2d_222)
        self.module_223 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/54089(EfficientNet::nndct_hswish_223)
        self.module_224 = py_nndct.nn.Conv2d(in_channels=40, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.389(EfficientNet::nndct_conv2d_224)
        self.module_225 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.391(EfficientNet::nndct_hsigmoid_225)
        self.module_226 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[0]/Sequential[block]/SqueezeExcitation[2]/ret.393(EfficientNet::nndct_elemwise_mul_226)
        self.module_227 = py_nndct.nn.Conv2d(in_channels=128, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[0]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.395(EfficientNet::nndct_conv2d_227)
        self.module_228 = py_nndct.nn.Conv2d(in_channels=148, out_channels=71, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[1]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.399(EfficientNet::nndct_conv2d_228)
        self.module_229 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[1]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/54168(EfficientNet::nndct_hswish_229)
        self.module_230 = py_nndct.nn.Conv2d(in_channels=71, out_channels=71, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=71, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[1]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.403(EfficientNet::nndct_depthwise_conv2d_230)
        self.module_231 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[1]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/54196(EfficientNet::nndct_hswish_231)
        self.module_232 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/54245(EfficientNet::nndct_adaptive_avg_pool2d_232)
        self.module_233 = py_nndct.nn.Conv2d(in_channels=71, out_channels=14, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.407(EfficientNet::nndct_conv2d_233)
        self.module_234 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/54267(EfficientNet::nndct_hswish_234)
        self.module_235 = py_nndct.nn.Conv2d(in_channels=14, out_channels=71, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.409(EfficientNet::nndct_conv2d_235)
        self.module_236 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.411(EfficientNet::nndct_hsigmoid_236)
        self.module_237 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[1]/Sequential[block]/SqueezeExcitation[2]/ret.413(EfficientNet::nndct_elemwise_mul_237)
        self.module_238 = py_nndct.nn.Conv2d(in_channels=71, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[1]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.415(EfficientNet::nndct_conv2d_238)
        self.module_239 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[1]/54321(EfficientNet::nndct_elemwise_add_239)
        self.module_240 = py_nndct.nn.Conv2d(in_channels=148, out_channels=77, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[2]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.419(EfficientNet::nndct_conv2d_240)
        self.module_241 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[2]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/54349(EfficientNet::nndct_hswish_241)
        self.module_242 = py_nndct.nn.Conv2d(in_channels=77, out_channels=77, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=77, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[2]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.423(EfficientNet::nndct_depthwise_conv2d_242)
        self.module_243 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[2]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/54377(EfficientNet::nndct_hswish_243)
        self.module_244 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/54426(EfficientNet::nndct_adaptive_avg_pool2d_244)
        self.module_245 = py_nndct.nn.Conv2d(in_channels=77, out_channels=42, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.427(EfficientNet::nndct_conv2d_245)
        self.module_246 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/54448(EfficientNet::nndct_hswish_246)
        self.module_247 = py_nndct.nn.Conv2d(in_channels=42, out_channels=77, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.429(EfficientNet::nndct_conv2d_247)
        self.module_248 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.431(EfficientNet::nndct_hsigmoid_248)
        self.module_249 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[2]/Sequential[block]/SqueezeExcitation[2]/ret.433(EfficientNet::nndct_elemwise_mul_249)
        self.module_250 = py_nndct.nn.Conv2d(in_channels=77, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[2]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.435(EfficientNet::nndct_conv2d_250)
        self.module_251 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[2]/54502(EfficientNet::nndct_elemwise_add_251)
        self.module_252 = py_nndct.nn.Conv2d(in_channels=148, out_channels=100, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[3]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.439(EfficientNet::nndct_conv2d_252)
        self.module_253 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[3]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/54530(EfficientNet::nndct_hswish_253)
        self.module_254 = py_nndct.nn.Conv2d(in_channels=100, out_channels=100, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=100, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[3]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.443(EfficientNet::nndct_depthwise_conv2d_254)
        self.module_255 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[3]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/54558(EfficientNet::nndct_hswish_255)
        self.module_256 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/54607(EfficientNet::nndct_adaptive_avg_pool2d_256)
        self.module_257 = py_nndct.nn.Conv2d(in_channels=100, out_channels=44, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.447(EfficientNet::nndct_conv2d_257)
        self.module_258 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/54629(EfficientNet::nndct_hswish_258)
        self.module_259 = py_nndct.nn.Conv2d(in_channels=44, out_channels=100, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.449(EfficientNet::nndct_conv2d_259)
        self.module_260 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.451(EfficientNet::nndct_hsigmoid_260)
        self.module_261 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[3]/Sequential[block]/SqueezeExcitation[2]/ret.453(EfficientNet::nndct_elemwise_mul_261)
        self.module_262 = py_nndct.nn.Conv2d(in_channels=100, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[3]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.455(EfficientNet::nndct_conv2d_262)
        self.module_263 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[3]/54683(EfficientNet::nndct_elemwise_add_263)
        self.module_264 = py_nndct.nn.Conv2d(in_channels=148, out_channels=70, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[4]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.459(EfficientNet::nndct_conv2d_264)
        self.module_265 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[4]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/54711(EfficientNet::nndct_hswish_265)
        self.module_266 = py_nndct.nn.Conv2d(in_channels=70, out_channels=70, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=70, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[4]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.463(EfficientNet::nndct_depthwise_conv2d_266)
        self.module_267 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[4]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/54739(EfficientNet::nndct_hswish_267)
        self.module_268 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/54788(EfficientNet::nndct_adaptive_avg_pool2d_268)
        self.module_269 = py_nndct.nn.Conv2d(in_channels=70, out_channels=40, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.467(EfficientNet::nndct_conv2d_269)
        self.module_270 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/54810(EfficientNet::nndct_hswish_270)
        self.module_271 = py_nndct.nn.Conv2d(in_channels=40, out_channels=70, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.469(EfficientNet::nndct_conv2d_271)
        self.module_272 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.471(EfficientNet::nndct_hsigmoid_272)
        self.module_273 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[4]/Sequential[block]/SqueezeExcitation[2]/ret.473(EfficientNet::nndct_elemwise_mul_273)
        self.module_274 = py_nndct.nn.Conv2d(in_channels=70, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[4]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.475(EfficientNet::nndct_conv2d_274)
        self.module_275 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[4]/54864(EfficientNet::nndct_elemwise_add_275)
        self.module_276 = py_nndct.nn.Conv2d(in_channels=148, out_channels=61, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[5]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.479(EfficientNet::nndct_conv2d_276)
        self.module_277 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[5]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/54892(EfficientNet::nndct_hswish_277)
        self.module_278 = py_nndct.nn.Conv2d(in_channels=61, out_channels=61, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=61, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[5]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.483(EfficientNet::nndct_depthwise_conv2d_278)
        self.module_279 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[5]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/54920(EfficientNet::nndct_hswish_279)
        self.module_280 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/54969(EfficientNet::nndct_adaptive_avg_pool2d_280)
        self.module_281 = py_nndct.nn.Conv2d(in_channels=61, out_channels=35, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.487(EfficientNet::nndct_conv2d_281)
        self.module_282 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/54991(EfficientNet::nndct_hswish_282)
        self.module_283 = py_nndct.nn.Conv2d(in_channels=35, out_channels=61, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.489(EfficientNet::nndct_conv2d_283)
        self.module_284 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.491(EfficientNet::nndct_hsigmoid_284)
        self.module_285 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[5]/Sequential[block]/SqueezeExcitation[2]/ret.493(EfficientNet::nndct_elemwise_mul_285)
        self.module_286 = py_nndct.nn.Conv2d(in_channels=61, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[5]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.495(EfficientNet::nndct_conv2d_286)
        self.module_287 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[5]/55045(EfficientNet::nndct_elemwise_add_287)
        self.module_288 = py_nndct.nn.Conv2d(in_channels=148, out_channels=75, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[6]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.499(EfficientNet::nndct_conv2d_288)
        self.module_289 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[6]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/55073(EfficientNet::nndct_hswish_289)
        self.module_290 = py_nndct.nn.Conv2d(in_channels=75, out_channels=75, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=75, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[6]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.503(EfficientNet::nndct_depthwise_conv2d_290)
        self.module_291 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[6]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/55101(EfficientNet::nndct_hswish_291)
        self.module_292 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[6]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/55150(EfficientNet::nndct_adaptive_avg_pool2d_292)
        self.module_293 = py_nndct.nn.Conv2d(in_channels=75, out_channels=54, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[6]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.507(EfficientNet::nndct_conv2d_293)
        self.module_294 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[6]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/55172(EfficientNet::nndct_hswish_294)
        self.module_295 = py_nndct.nn.Conv2d(in_channels=54, out_channels=75, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[6]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.509(EfficientNet::nndct_conv2d_295)
        self.module_296 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[6]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.511(EfficientNet::nndct_hsigmoid_296)
        self.module_297 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[6]/Sequential[block]/SqueezeExcitation[2]/ret.513(EfficientNet::nndct_elemwise_mul_297)
        self.module_298 = py_nndct.nn.Conv2d(in_channels=75, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[6]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.515(EfficientNet::nndct_conv2d_298)
        self.module_299 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[6]/55226(EfficientNet::nndct_elemwise_add_299)
        self.module_300 = py_nndct.nn.Conv2d(in_channels=148, out_channels=57, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[7]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.519(EfficientNet::nndct_conv2d_300)
        self.module_301 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[7]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/55254(EfficientNet::nndct_hswish_301)
        self.module_302 = py_nndct.nn.Conv2d(in_channels=57, out_channels=57, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=57, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[7]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.523(EfficientNet::nndct_depthwise_conv2d_302)
        self.module_303 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[7]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/55282(EfficientNet::nndct_hswish_303)
        self.module_304 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[7]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/55331(EfficientNet::nndct_adaptive_avg_pool2d_304)
        self.module_305 = py_nndct.nn.Conv2d(in_channels=57, out_channels=58, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[7]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.527(EfficientNet::nndct_conv2d_305)
        self.module_306 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[7]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/55353(EfficientNet::nndct_hswish_306)
        self.module_307 = py_nndct.nn.Conv2d(in_channels=58, out_channels=57, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[7]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.529(EfficientNet::nndct_conv2d_307)
        self.module_308 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[7]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.531(EfficientNet::nndct_hsigmoid_308)
        self.module_309 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[7]/Sequential[block]/SqueezeExcitation[2]/ret.533(EfficientNet::nndct_elemwise_mul_309)
        self.module_310 = py_nndct.nn.Conv2d(in_channels=57, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[7]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.535(EfficientNet::nndct_conv2d_310)
        self.module_311 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[7]/55407(EfficientNet::nndct_elemwise_add_311)
        self.module_312 = py_nndct.nn.Conv2d(in_channels=148, out_channels=70, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[8]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.539(EfficientNet::nndct_conv2d_312)
        self.module_313 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[8]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/55435(EfficientNet::nndct_hswish_313)
        self.module_314 = py_nndct.nn.Conv2d(in_channels=70, out_channels=70, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=70, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[8]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.543(EfficientNet::nndct_depthwise_conv2d_314)
        self.module_315 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[8]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/55463(EfficientNet::nndct_hswish_315)
        self.module_316 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[8]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/55512(EfficientNet::nndct_adaptive_avg_pool2d_316)
        self.module_317 = py_nndct.nn.Conv2d(in_channels=70, out_channels=45, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[8]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.547(EfficientNet::nndct_conv2d_317)
        self.module_318 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[8]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/55534(EfficientNet::nndct_hswish_318)
        self.module_319 = py_nndct.nn.Conv2d(in_channels=45, out_channels=70, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[8]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.549(EfficientNet::nndct_conv2d_319)
        self.module_320 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[8]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.551(EfficientNet::nndct_hsigmoid_320)
        self.module_321 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[8]/Sequential[block]/SqueezeExcitation[2]/ret.553(EfficientNet::nndct_elemwise_mul_321)
        self.module_322 = py_nndct.nn.Conv2d(in_channels=70, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[8]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.555(EfficientNet::nndct_conv2d_322)
        self.module_323 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[8]/55588(EfficientNet::nndct_elemwise_add_323)
        self.module_324 = py_nndct.nn.Conv2d(in_channels=148, out_channels=91, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[9]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.559(EfficientNet::nndct_conv2d_324)
        self.module_325 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[9]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/55616(EfficientNet::nndct_hswish_325)
        self.module_326 = py_nndct.nn.Conv2d(in_channels=91, out_channels=91, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=91, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[9]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.563(EfficientNet::nndct_depthwise_conv2d_326)
        self.module_327 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[9]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/55644(EfficientNet::nndct_hswish_327)
        self.module_328 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[9]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/55693(EfficientNet::nndct_adaptive_avg_pool2d_328)
        self.module_329 = py_nndct.nn.Conv2d(in_channels=91, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[9]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.567(EfficientNet::nndct_conv2d_329)
        self.module_330 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[9]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/55715(EfficientNet::nndct_hswish_330)
        self.module_331 = py_nndct.nn.Conv2d(in_channels=64, out_channels=91, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[9]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.569(EfficientNet::nndct_conv2d_331)
        self.module_332 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[9]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.571(EfficientNet::nndct_hsigmoid_332)
        self.module_333 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[9]/Sequential[block]/SqueezeExcitation[2]/ret.573(EfficientNet::nndct_elemwise_mul_333)
        self.module_334 = py_nndct.nn.Conv2d(in_channels=91, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[9]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.575(EfficientNet::nndct_conv2d_334)
        self.module_335 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[9]/55769(EfficientNet::nndct_elemwise_add_335)
        self.module_336 = py_nndct.nn.Conv2d(in_channels=148, out_channels=76, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[10]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.579(EfficientNet::nndct_conv2d_336)
        self.module_337 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[10]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/55797(EfficientNet::nndct_hswish_337)
        self.module_338 = py_nndct.nn.Conv2d(in_channels=76, out_channels=76, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=76, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[10]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.583(EfficientNet::nndct_depthwise_conv2d_338)
        self.module_339 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[10]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/55825(EfficientNet::nndct_hswish_339)
        self.module_340 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[10]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/55874(EfficientNet::nndct_adaptive_avg_pool2d_340)
        self.module_341 = py_nndct.nn.Conv2d(in_channels=76, out_channels=58, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[10]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.587(EfficientNet::nndct_conv2d_341)
        self.module_342 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[10]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/55896(EfficientNet::nndct_hswish_342)
        self.module_343 = py_nndct.nn.Conv2d(in_channels=58, out_channels=76, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[10]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.589(EfficientNet::nndct_conv2d_343)
        self.module_344 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[10]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.591(EfficientNet::nndct_hsigmoid_344)
        self.module_345 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[10]/Sequential[block]/SqueezeExcitation[2]/ret.593(EfficientNet::nndct_elemwise_mul_345)
        self.module_346 = py_nndct.nn.Conv2d(in_channels=76, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[10]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.595(EfficientNet::nndct_conv2d_346)
        self.module_347 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[10]/55950(EfficientNet::nndct_elemwise_add_347)
        self.module_348 = py_nndct.nn.Conv2d(in_channels=148, out_channels=59, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[11]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.599(EfficientNet::nndct_conv2d_348)
        self.module_349 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[11]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/55978(EfficientNet::nndct_hswish_349)
        self.module_350 = py_nndct.nn.Conv2d(in_channels=59, out_channels=59, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=59, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[11]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.603(EfficientNet::nndct_depthwise_conv2d_350)
        self.module_351 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[11]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/56006(EfficientNet::nndct_hswish_351)
        self.module_352 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[11]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/56055(EfficientNet::nndct_adaptive_avg_pool2d_352)
        self.module_353 = py_nndct.nn.Conv2d(in_channels=59, out_channels=61, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[11]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.607(EfficientNet::nndct_conv2d_353)
        self.module_354 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[11]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/56077(EfficientNet::nndct_hswish_354)
        self.module_355 = py_nndct.nn.Conv2d(in_channels=61, out_channels=59, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[11]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.609(EfficientNet::nndct_conv2d_355)
        self.module_356 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[11]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.611(EfficientNet::nndct_hsigmoid_356)
        self.module_357 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[11]/Sequential[block]/SqueezeExcitation[2]/ret.613(EfficientNet::nndct_elemwise_mul_357)
        self.module_358 = py_nndct.nn.Conv2d(in_channels=59, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[11]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.615(EfficientNet::nndct_conv2d_358)
        self.module_359 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[11]/56131(EfficientNet::nndct_elemwise_add_359)
        self.module_360 = py_nndct.nn.Conv2d(in_channels=148, out_channels=61, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[12]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.619(EfficientNet::nndct_conv2d_360)
        self.module_361 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[12]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/56159(EfficientNet::nndct_hswish_361)
        self.module_362 = py_nndct.nn.Conv2d(in_channels=61, out_channels=61, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=61, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[12]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.623(EfficientNet::nndct_depthwise_conv2d_362)
        self.module_363 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[12]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/56187(EfficientNet::nndct_hswish_363)
        self.module_364 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[12]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/56236(EfficientNet::nndct_adaptive_avg_pool2d_364)
        self.module_365 = py_nndct.nn.Conv2d(in_channels=61, out_channels=56, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[12]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.627(EfficientNet::nndct_conv2d_365)
        self.module_366 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[12]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/56258(EfficientNet::nndct_hswish_366)
        self.module_367 = py_nndct.nn.Conv2d(in_channels=56, out_channels=61, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[12]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.629(EfficientNet::nndct_conv2d_367)
        self.module_368 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[12]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.631(EfficientNet::nndct_hsigmoid_368)
        self.module_369 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[12]/Sequential[block]/SqueezeExcitation[2]/ret.633(EfficientNet::nndct_elemwise_mul_369)
        self.module_370 = py_nndct.nn.Conv2d(in_channels=61, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[12]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.635(EfficientNet::nndct_conv2d_370)
        self.module_371 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[12]/56312(EfficientNet::nndct_elemwise_add_371)
        self.module_372 = py_nndct.nn.Conv2d(in_channels=148, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[13]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.639(EfficientNet::nndct_conv2d_372)
        self.module_373 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[13]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/56340(EfficientNet::nndct_hswish_373)
        self.module_374 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=64, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[13]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.643(EfficientNet::nndct_depthwise_conv2d_374)
        self.module_375 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[13]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/56368(EfficientNet::nndct_hswish_375)
        self.module_376 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[13]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/56417(EfficientNet::nndct_adaptive_avg_pool2d_376)
        self.module_377 = py_nndct.nn.Conv2d(in_channels=64, out_channels=63, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[13]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.647(EfficientNet::nndct_conv2d_377)
        self.module_378 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[13]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/56439(EfficientNet::nndct_hswish_378)
        self.module_379 = py_nndct.nn.Conv2d(in_channels=63, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[13]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.649(EfficientNet::nndct_conv2d_379)
        self.module_380 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[13]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.651(EfficientNet::nndct_hsigmoid_380)
        self.module_381 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[13]/Sequential[block]/SqueezeExcitation[2]/ret.653(EfficientNet::nndct_elemwise_mul_381)
        self.module_382 = py_nndct.nn.Conv2d(in_channels=64, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[13]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.655(EfficientNet::nndct_conv2d_382)
        self.module_383 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[13]/56493(EfficientNet::nndct_elemwise_add_383)
        self.module_384 = py_nndct.nn.Conv2d(in_channels=148, out_channels=84, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[14]/Sequential[block]/Conv2dNormActivation[0]/Conv2d[0]/ret.659(EfficientNet::nndct_conv2d_384)
        self.module_385 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[14]/Sequential[block]/Conv2dNormActivation[0]/Hardswish[2]/56521(EfficientNet::nndct_hswish_385)
        self.module_386 = py_nndct.nn.Conv2d(in_channels=84, out_channels=84, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=84, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[14]/Sequential[block]/Conv2dNormActivation[1]/Conv2d[0]/ret.663(EfficientNet::nndct_depthwise_conv2d_386)
        self.module_387 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[14]/Sequential[block]/Conv2dNormActivation[1]/Hardswish[2]/56549(EfficientNet::nndct_hswish_387)
        self.module_388 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[14]/Sequential[block]/SqueezeExcitation[2]/AdaptiveAvgPool2d[avgpool]/56598(EfficientNet::nndct_adaptive_avg_pool2d_388)
        self.module_389 = py_nndct.nn.Conv2d(in_channels=84, out_channels=63, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[14]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc1]/ret.667(EfficientNet::nndct_conv2d_389)
        self.module_390 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[14]/Sequential[block]/SqueezeExcitation[2]/Hardswish[activation]/56620(EfficientNet::nndct_hswish_390)
        self.module_391 = py_nndct.nn.Conv2d(in_channels=63, out_channels=84, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[14]/Sequential[block]/SqueezeExcitation[2]/Conv2d[fc2]/ret.669(EfficientNet::nndct_conv2d_391)
        self.module_392 = py_nndct.nn.Hardsigmoid(inplace=False) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[14]/Sequential[block]/SqueezeExcitation[2]/Hardsigmoid[scale_activation]/ret.671(EfficientNet::nndct_hsigmoid_392)
        self.module_393 = py_nndct.nn.Module('nndct_elemwise_mul') #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[14]/Sequential[block]/SqueezeExcitation[2]/ret.673(EfficientNet::nndct_elemwise_mul_393)
        self.module_394 = py_nndct.nn.Conv2d(in_channels=84, out_channels=148, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[14]/Sequential[block]/Conv2dNormActivation[3]/Conv2d[0]/ret.675(EfficientNet::nndct_conv2d_394)
        self.module_395 = py_nndct.nn.Add() #EfficientNet::EfficientNet/Sequential[features]/Sequential[6]/MBConv[14]/56674(EfficientNet::nndct_elemwise_add_395)
        self.module_396 = py_nndct.nn.Conv2d(in_channels=148, out_channels=159, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #EfficientNet::EfficientNet/Sequential[features]/Conv2dNormActivation[7]/Conv2d[0]/ret.679(EfficientNet::nndct_conv2d_396)
        self.module_397 = py_nndct.nn.Hardswish(inplace=True) #EfficientNet::EfficientNet/Sequential[features]/Conv2dNormActivation[7]/Hardswish[2]/56702(EfficientNet::nndct_hswish_397)
        self.module_398 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #EfficientNet::EfficientNet/AdaptiveAvgPool2d[avgpool]/56751(EfficientNet::nndct_adaptive_avg_pool2d_398)
        self.module_399 = py_nndct.nn.Module('nndct_flatten') #EfficientNet::EfficientNet/ret.683(EfficientNet::nndct_flatten_399)
        self.module_400 = py_nndct.nn.Linear(in_features=159, out_features=10, bias=True) #EfficientNet::EfficientNet/Sequential[classifier]/Linear[1]/ret(EfficientNet::nndct_dense_400)

    @py_nndct.nn.forward_processor
    def forward(self, *args):
        output_module_0 = self.module_0(input=args[0])
        output_module_0 = self.module_1(output_module_0)
        output_module_0 = self.module_2(output_module_0)
        output_module_3 = self.module_3(output_module_0)
        output_module_3 = self.module_4(output_module_3)
        output_module_3 = self.module_5(input=output_module_3, other=output_module_0, alpha=1)
        output_module_6 = self.module_6(output_module_3)
        output_module_6 = self.module_7(output_module_6)
        output_module_6 = self.module_8(input=output_module_6, other=output_module_3, alpha=1)
        output_module_6 = self.module_9(output_module_6)
        output_module_6 = self.module_10(output_module_6)
        output_module_6 = self.module_11(output_module_6)
        output_module_12 = self.module_12(output_module_6)
        output_module_12 = self.module_13(output_module_12)
        output_module_12 = self.module_14(output_module_12)
        output_module_12 = self.module_15(input=output_module_12, other=output_module_6, alpha=1)
        output_module_16 = self.module_16(output_module_12)
        output_module_16 = self.module_17(output_module_16)
        output_module_16 = self.module_18(output_module_16)
        output_module_16 = self.module_19(input=output_module_16, other=output_module_12, alpha=1)
        output_module_20 = self.module_20(output_module_16)
        output_module_20 = self.module_21(output_module_20)
        output_module_20 = self.module_22(output_module_20)
        output_module_20 = self.module_23(input=output_module_20, other=output_module_16, alpha=1)
        output_module_20 = self.module_24(output_module_20)
        output_module_20 = self.module_25(output_module_20)
        output_module_20 = self.module_26(output_module_20)
        output_module_27 = self.module_27(output_module_20)
        output_module_27 = self.module_28(output_module_27)
        output_module_27 = self.module_29(output_module_27)
        output_module_27 = self.module_30(input=output_module_27, other=output_module_20, alpha=1)
        output_module_31 = self.module_31(output_module_27)
        output_module_31 = self.module_32(output_module_31)
        output_module_31 = self.module_33(output_module_31)
        output_module_31 = self.module_34(input=output_module_31, other=output_module_27, alpha=1)
        output_module_35 = self.module_35(output_module_31)
        output_module_35 = self.module_36(output_module_35)
        output_module_35 = self.module_37(output_module_35)
        output_module_35 = self.module_38(input=output_module_35, other=output_module_31, alpha=1)
        output_module_35 = self.module_39(output_module_35)
        output_module_35 = self.module_40(output_module_35)
        output_module_35 = self.module_41(output_module_35)
        output_module_35 = self.module_42(output_module_35)
        output_module_43 = self.module_43(output_module_35)
        output_module_43 = self.module_44(output_module_43)
        output_module_43 = self.module_45(output_module_43)
        output_module_43 = self.module_46(output_module_43)
        output_module_43 = self.module_47(output_module_43)
        output_module_43 = self.module_48(input=output_module_43, other=output_module_35)
        output_module_43 = self.module_49(output_module_43)
        output_module_50 = self.module_50(output_module_43)
        output_module_50 = self.module_51(output_module_50)
        output_module_50 = self.module_52(output_module_50)
        output_module_50 = self.module_53(output_module_50)
        output_module_54 = self.module_54(output_module_50)
        output_module_54 = self.module_55(output_module_54)
        output_module_54 = self.module_56(output_module_54)
        output_module_54 = self.module_57(output_module_54)
        output_module_54 = self.module_58(output_module_54)
        output_module_54 = self.module_59(input=output_module_54, other=output_module_50)
        output_module_54 = self.module_60(output_module_54)
        output_module_54 = self.module_61(input=output_module_54, other=output_module_43, alpha=1)
        output_module_62 = self.module_62(output_module_54)
        output_module_62 = self.module_63(output_module_62)
        output_module_62 = self.module_64(output_module_62)
        output_module_62 = self.module_65(output_module_62)
        output_module_66 = self.module_66(output_module_62)
        output_module_66 = self.module_67(output_module_66)
        output_module_66 = self.module_68(output_module_66)
        output_module_66 = self.module_69(output_module_66)
        output_module_66 = self.module_70(output_module_66)
        output_module_66 = self.module_71(input=output_module_66, other=output_module_62)
        output_module_66 = self.module_72(output_module_66)
        output_module_66 = self.module_73(input=output_module_66, other=output_module_54, alpha=1)
        output_module_74 = self.module_74(output_module_66)
        output_module_74 = self.module_75(output_module_74)
        output_module_74 = self.module_76(output_module_74)
        output_module_74 = self.module_77(output_module_74)
        output_module_78 = self.module_78(output_module_74)
        output_module_78 = self.module_79(output_module_78)
        output_module_78 = self.module_80(output_module_78)
        output_module_78 = self.module_81(output_module_78)
        output_module_78 = self.module_82(output_module_78)
        output_module_78 = self.module_83(input=output_module_78, other=output_module_74)
        output_module_78 = self.module_84(output_module_78)
        output_module_78 = self.module_85(input=output_module_78, other=output_module_66, alpha=1)
        output_module_86 = self.module_86(output_module_78)
        output_module_86 = self.module_87(output_module_86)
        output_module_86 = self.module_88(output_module_86)
        output_module_86 = self.module_89(output_module_86)
        output_module_90 = self.module_90(output_module_86)
        output_module_90 = self.module_91(output_module_90)
        output_module_90 = self.module_92(output_module_90)
        output_module_90 = self.module_93(output_module_90)
        output_module_90 = self.module_94(output_module_90)
        output_module_90 = self.module_95(input=output_module_90, other=output_module_86)
        output_module_90 = self.module_96(output_module_90)
        output_module_90 = self.module_97(input=output_module_90, other=output_module_78, alpha=1)
        output_module_98 = self.module_98(output_module_90)
        output_module_98 = self.module_99(output_module_98)
        output_module_98 = self.module_100(output_module_98)
        output_module_98 = self.module_101(output_module_98)
        output_module_102 = self.module_102(output_module_98)
        output_module_102 = self.module_103(output_module_102)
        output_module_102 = self.module_104(output_module_102)
        output_module_102 = self.module_105(output_module_102)
        output_module_102 = self.module_106(output_module_102)
        output_module_102 = self.module_107(input=output_module_102, other=output_module_98)
        output_module_102 = self.module_108(output_module_102)
        output_module_102 = self.module_109(input=output_module_102, other=output_module_90, alpha=1)
        output_module_102 = self.module_110(output_module_102)
        output_module_102 = self.module_111(output_module_102)
        output_module_102 = self.module_112(output_module_102)
        output_module_102 = self.module_113(output_module_102)
        output_module_114 = self.module_114(output_module_102)
        output_module_114 = self.module_115(output_module_114)
        output_module_114 = self.module_116(output_module_114)
        output_module_114 = self.module_117(output_module_114)
        output_module_114 = self.module_118(output_module_114)
        output_module_114 = self.module_119(input=output_module_114, other=output_module_102)
        output_module_114 = self.module_120(output_module_114)
        output_module_121 = self.module_121(output_module_114)
        output_module_121 = self.module_122(output_module_121)
        output_module_121 = self.module_123(output_module_121)
        output_module_121 = self.module_124(output_module_121)
        output_module_125 = self.module_125(output_module_121)
        output_module_125 = self.module_126(output_module_125)
        output_module_125 = self.module_127(output_module_125)
        output_module_125 = self.module_128(output_module_125)
        output_module_125 = self.module_129(output_module_125)
        output_module_125 = self.module_130(input=output_module_125, other=output_module_121)
        output_module_125 = self.module_131(output_module_125)
        output_module_125 = self.module_132(input=output_module_125, other=output_module_114, alpha=1)
        output_module_133 = self.module_133(output_module_125)
        output_module_133 = self.module_134(output_module_133)
        output_module_133 = self.module_135(output_module_133)
        output_module_133 = self.module_136(output_module_133)
        output_module_137 = self.module_137(output_module_133)
        output_module_137 = self.module_138(output_module_137)
        output_module_137 = self.module_139(output_module_137)
        output_module_137 = self.module_140(output_module_137)
        output_module_137 = self.module_141(output_module_137)
        output_module_137 = self.module_142(input=output_module_137, other=output_module_133)
        output_module_137 = self.module_143(output_module_137)
        output_module_137 = self.module_144(input=output_module_137, other=output_module_125, alpha=1)
        output_module_145 = self.module_145(output_module_137)
        output_module_145 = self.module_146(output_module_145)
        output_module_145 = self.module_147(output_module_145)
        output_module_145 = self.module_148(output_module_145)
        output_module_149 = self.module_149(output_module_145)
        output_module_149 = self.module_150(output_module_149)
        output_module_149 = self.module_151(output_module_149)
        output_module_149 = self.module_152(output_module_149)
        output_module_149 = self.module_153(output_module_149)
        output_module_149 = self.module_154(input=output_module_149, other=output_module_145)
        output_module_149 = self.module_155(output_module_149)
        output_module_149 = self.module_156(input=output_module_149, other=output_module_137, alpha=1)
        output_module_157 = self.module_157(output_module_149)
        output_module_157 = self.module_158(output_module_157)
        output_module_157 = self.module_159(output_module_157)
        output_module_157 = self.module_160(output_module_157)
        output_module_161 = self.module_161(output_module_157)
        output_module_161 = self.module_162(output_module_161)
        output_module_161 = self.module_163(output_module_161)
        output_module_161 = self.module_164(output_module_161)
        output_module_161 = self.module_165(output_module_161)
        output_module_161 = self.module_166(input=output_module_161, other=output_module_157)
        output_module_161 = self.module_167(output_module_161)
        output_module_161 = self.module_168(input=output_module_161, other=output_module_149, alpha=1)
        output_module_169 = self.module_169(output_module_161)
        output_module_169 = self.module_170(output_module_169)
        output_module_169 = self.module_171(output_module_169)
        output_module_169 = self.module_172(output_module_169)
        output_module_173 = self.module_173(output_module_169)
        output_module_173 = self.module_174(output_module_173)
        output_module_173 = self.module_175(output_module_173)
        output_module_173 = self.module_176(output_module_173)
        output_module_173 = self.module_177(output_module_173)
        output_module_173 = self.module_178(input=output_module_173, other=output_module_169)
        output_module_173 = self.module_179(output_module_173)
        output_module_173 = self.module_180(input=output_module_173, other=output_module_161, alpha=1)
        output_module_181 = self.module_181(output_module_173)
        output_module_181 = self.module_182(output_module_181)
        output_module_181 = self.module_183(output_module_181)
        output_module_181 = self.module_184(output_module_181)
        output_module_185 = self.module_185(output_module_181)
        output_module_185 = self.module_186(output_module_185)
        output_module_185 = self.module_187(output_module_185)
        output_module_185 = self.module_188(output_module_185)
        output_module_185 = self.module_189(output_module_185)
        output_module_185 = self.module_190(input=output_module_185, other=output_module_181)
        output_module_185 = self.module_191(output_module_185)
        output_module_185 = self.module_192(input=output_module_185, other=output_module_173, alpha=1)
        output_module_193 = self.module_193(output_module_185)
        output_module_193 = self.module_194(output_module_193)
        output_module_193 = self.module_195(output_module_193)
        output_module_193 = self.module_196(output_module_193)
        output_module_197 = self.module_197(output_module_193)
        output_module_197 = self.module_198(output_module_197)
        output_module_197 = self.module_199(output_module_197)
        output_module_197 = self.module_200(output_module_197)
        output_module_197 = self.module_201(output_module_197)
        output_module_197 = self.module_202(input=output_module_197, other=output_module_193)
        output_module_197 = self.module_203(output_module_197)
        output_module_197 = self.module_204(input=output_module_197, other=output_module_185, alpha=1)
        output_module_205 = self.module_205(output_module_197)
        output_module_205 = self.module_206(output_module_205)
        output_module_205 = self.module_207(output_module_205)
        output_module_205 = self.module_208(output_module_205)
        output_module_209 = self.module_209(output_module_205)
        output_module_209 = self.module_210(output_module_209)
        output_module_209 = self.module_211(output_module_209)
        output_module_209 = self.module_212(output_module_209)
        output_module_209 = self.module_213(output_module_209)
        output_module_209 = self.module_214(input=output_module_209, other=output_module_205)
        output_module_209 = self.module_215(output_module_209)
        output_module_209 = self.module_216(input=output_module_209, other=output_module_197, alpha=1)
        output_module_209 = self.module_217(output_module_209)
        output_module_209 = self.module_218(output_module_209)
        output_module_209 = self.module_219(output_module_209)
        output_module_209 = self.module_220(output_module_209)
        output_module_221 = self.module_221(output_module_209)
        output_module_221 = self.module_222(output_module_221)
        output_module_221 = self.module_223(output_module_221)
        output_module_221 = self.module_224(output_module_221)
        output_module_221 = self.module_225(output_module_221)
        output_module_221 = self.module_226(input=output_module_221, other=output_module_209)
        output_module_221 = self.module_227(output_module_221)
        output_module_228 = self.module_228(output_module_221)
        output_module_228 = self.module_229(output_module_228)
        output_module_228 = self.module_230(output_module_228)
        output_module_228 = self.module_231(output_module_228)
        output_module_232 = self.module_232(output_module_228)
        output_module_232 = self.module_233(output_module_232)
        output_module_232 = self.module_234(output_module_232)
        output_module_232 = self.module_235(output_module_232)
        output_module_232 = self.module_236(output_module_232)
        output_module_232 = self.module_237(input=output_module_232, other=output_module_228)
        output_module_232 = self.module_238(output_module_232)
        output_module_232 = self.module_239(input=output_module_232, other=output_module_221, alpha=1)
        output_module_240 = self.module_240(output_module_232)
        output_module_240 = self.module_241(output_module_240)
        output_module_240 = self.module_242(output_module_240)
        output_module_240 = self.module_243(output_module_240)
        output_module_244 = self.module_244(output_module_240)
        output_module_244 = self.module_245(output_module_244)
        output_module_244 = self.module_246(output_module_244)
        output_module_244 = self.module_247(output_module_244)
        output_module_244 = self.module_248(output_module_244)
        output_module_244 = self.module_249(input=output_module_244, other=output_module_240)
        output_module_244 = self.module_250(output_module_244)
        output_module_244 = self.module_251(input=output_module_244, other=output_module_232, alpha=1)
        output_module_252 = self.module_252(output_module_244)
        output_module_252 = self.module_253(output_module_252)
        output_module_252 = self.module_254(output_module_252)
        output_module_252 = self.module_255(output_module_252)
        output_module_256 = self.module_256(output_module_252)
        output_module_256 = self.module_257(output_module_256)
        output_module_256 = self.module_258(output_module_256)
        output_module_256 = self.module_259(output_module_256)
        output_module_256 = self.module_260(output_module_256)
        output_module_256 = self.module_261(input=output_module_256, other=output_module_252)
        output_module_256 = self.module_262(output_module_256)
        output_module_256 = self.module_263(input=output_module_256, other=output_module_244, alpha=1)
        output_module_264 = self.module_264(output_module_256)
        output_module_264 = self.module_265(output_module_264)
        output_module_264 = self.module_266(output_module_264)
        output_module_264 = self.module_267(output_module_264)
        output_module_268 = self.module_268(output_module_264)
        output_module_268 = self.module_269(output_module_268)
        output_module_268 = self.module_270(output_module_268)
        output_module_268 = self.module_271(output_module_268)
        output_module_268 = self.module_272(output_module_268)
        output_module_268 = self.module_273(input=output_module_268, other=output_module_264)
        output_module_268 = self.module_274(output_module_268)
        output_module_268 = self.module_275(input=output_module_268, other=output_module_256, alpha=1)
        output_module_276 = self.module_276(output_module_268)
        output_module_276 = self.module_277(output_module_276)
        output_module_276 = self.module_278(output_module_276)
        output_module_276 = self.module_279(output_module_276)
        output_module_280 = self.module_280(output_module_276)
        output_module_280 = self.module_281(output_module_280)
        output_module_280 = self.module_282(output_module_280)
        output_module_280 = self.module_283(output_module_280)
        output_module_280 = self.module_284(output_module_280)
        output_module_280 = self.module_285(input=output_module_280, other=output_module_276)
        output_module_280 = self.module_286(output_module_280)
        output_module_280 = self.module_287(input=output_module_280, other=output_module_268, alpha=1)
        output_module_288 = self.module_288(output_module_280)
        output_module_288 = self.module_289(output_module_288)
        output_module_288 = self.module_290(output_module_288)
        output_module_288 = self.module_291(output_module_288)
        output_module_292 = self.module_292(output_module_288)
        output_module_292 = self.module_293(output_module_292)
        output_module_292 = self.module_294(output_module_292)
        output_module_292 = self.module_295(output_module_292)
        output_module_292 = self.module_296(output_module_292)
        output_module_292 = self.module_297(input=output_module_292, other=output_module_288)
        output_module_292 = self.module_298(output_module_292)
        output_module_292 = self.module_299(input=output_module_292, other=output_module_280, alpha=1)
        output_module_300 = self.module_300(output_module_292)
        output_module_300 = self.module_301(output_module_300)
        output_module_300 = self.module_302(output_module_300)
        output_module_300 = self.module_303(output_module_300)
        output_module_304 = self.module_304(output_module_300)
        output_module_304 = self.module_305(output_module_304)
        output_module_304 = self.module_306(output_module_304)
        output_module_304 = self.module_307(output_module_304)
        output_module_304 = self.module_308(output_module_304)
        output_module_304 = self.module_309(input=output_module_304, other=output_module_300)
        output_module_304 = self.module_310(output_module_304)
        output_module_304 = self.module_311(input=output_module_304, other=output_module_292, alpha=1)
        output_module_312 = self.module_312(output_module_304)
        output_module_312 = self.module_313(output_module_312)
        output_module_312 = self.module_314(output_module_312)
        output_module_312 = self.module_315(output_module_312)
        output_module_316 = self.module_316(output_module_312)
        output_module_316 = self.module_317(output_module_316)
        output_module_316 = self.module_318(output_module_316)
        output_module_316 = self.module_319(output_module_316)
        output_module_316 = self.module_320(output_module_316)
        output_module_316 = self.module_321(input=output_module_316, other=output_module_312)
        output_module_316 = self.module_322(output_module_316)
        output_module_316 = self.module_323(input=output_module_316, other=output_module_304, alpha=1)
        output_module_324 = self.module_324(output_module_316)
        output_module_324 = self.module_325(output_module_324)
        output_module_324 = self.module_326(output_module_324)
        output_module_324 = self.module_327(output_module_324)
        output_module_328 = self.module_328(output_module_324)
        output_module_328 = self.module_329(output_module_328)
        output_module_328 = self.module_330(output_module_328)
        output_module_328 = self.module_331(output_module_328)
        output_module_328 = self.module_332(output_module_328)
        output_module_328 = self.module_333(input=output_module_328, other=output_module_324)
        output_module_328 = self.module_334(output_module_328)
        output_module_328 = self.module_335(input=output_module_328, other=output_module_316, alpha=1)
        output_module_336 = self.module_336(output_module_328)
        output_module_336 = self.module_337(output_module_336)
        output_module_336 = self.module_338(output_module_336)
        output_module_336 = self.module_339(output_module_336)
        output_module_340 = self.module_340(output_module_336)
        output_module_340 = self.module_341(output_module_340)
        output_module_340 = self.module_342(output_module_340)
        output_module_340 = self.module_343(output_module_340)
        output_module_340 = self.module_344(output_module_340)
        output_module_340 = self.module_345(input=output_module_340, other=output_module_336)
        output_module_340 = self.module_346(output_module_340)
        output_module_340 = self.module_347(input=output_module_340, other=output_module_328, alpha=1)
        output_module_348 = self.module_348(output_module_340)
        output_module_348 = self.module_349(output_module_348)
        output_module_348 = self.module_350(output_module_348)
        output_module_348 = self.module_351(output_module_348)
        output_module_352 = self.module_352(output_module_348)
        output_module_352 = self.module_353(output_module_352)
        output_module_352 = self.module_354(output_module_352)
        output_module_352 = self.module_355(output_module_352)
        output_module_352 = self.module_356(output_module_352)
        output_module_352 = self.module_357(input=output_module_352, other=output_module_348)
        output_module_352 = self.module_358(output_module_352)
        output_module_352 = self.module_359(input=output_module_352, other=output_module_340, alpha=1)
        output_module_360 = self.module_360(output_module_352)
        output_module_360 = self.module_361(output_module_360)
        output_module_360 = self.module_362(output_module_360)
        output_module_360 = self.module_363(output_module_360)
        output_module_364 = self.module_364(output_module_360)
        output_module_364 = self.module_365(output_module_364)
        output_module_364 = self.module_366(output_module_364)
        output_module_364 = self.module_367(output_module_364)
        output_module_364 = self.module_368(output_module_364)
        output_module_364 = self.module_369(input=output_module_364, other=output_module_360)
        output_module_364 = self.module_370(output_module_364)
        output_module_364 = self.module_371(input=output_module_364, other=output_module_352, alpha=1)
        output_module_372 = self.module_372(output_module_364)
        output_module_372 = self.module_373(output_module_372)
        output_module_372 = self.module_374(output_module_372)
        output_module_372 = self.module_375(output_module_372)
        output_module_376 = self.module_376(output_module_372)
        output_module_376 = self.module_377(output_module_376)
        output_module_376 = self.module_378(output_module_376)
        output_module_376 = self.module_379(output_module_376)
        output_module_376 = self.module_380(output_module_376)
        output_module_376 = self.module_381(input=output_module_376, other=output_module_372)
        output_module_376 = self.module_382(output_module_376)
        output_module_376 = self.module_383(input=output_module_376, other=output_module_364, alpha=1)
        output_module_384 = self.module_384(output_module_376)
        output_module_384 = self.module_385(output_module_384)
        output_module_384 = self.module_386(output_module_384)
        output_module_384 = self.module_387(output_module_384)
        output_module_388 = self.module_388(output_module_384)
        output_module_388 = self.module_389(output_module_388)
        output_module_388 = self.module_390(output_module_388)
        output_module_388 = self.module_391(output_module_388)
        output_module_388 = self.module_392(output_module_388)
        output_module_388 = self.module_393(input=output_module_388, other=output_module_384)
        output_module_388 = self.module_394(output_module_388)
        output_module_388 = self.module_395(input=output_module_388, other=output_module_376, alpha=1)
        output_module_388 = self.module_396(output_module_388)
        output_module_388 = self.module_397(output_module_388)
        output_module_388 = self.module_398(output_module_388)
        output_module_388 = self.module_399(input=output_module_388, start_dim=1, end_dim=-1)
        output_module_388 = self.module_400(output_module_388)
        return output_module_388
